# Задача 1. Сэндвич
# Есть функция, которая выводит начинку сэндвича. Сверху и снизу от начинки идут
# различные ингредиенты вроде салата, помидоров и других. Всё это в свою очередь
# содержится между двух половинок булочки. Реализуйте такую функцию и два соответствующих
# декоратора — ингредиенты и хлеб.
# Пример результата работы программы при вызове функции sandwich:
# </----------\>
#помидоры#
# --ветчина--
# ~салат~
# <\______/>


from typing import Callable


def sandwich(func: Callable) -> Callable:
    def wrapper():
        print('</----------\>')
        result = func()
        print(result)
        print('<\______/>')
    return wrapper


def tomatoes():
    return '#помидоры#'


def harm():
    return '--ветчина--'


def salat():
    return '~салат~'


@sandwich
def make_sandwich():
    return '\n'.join([tomatoes(), harm(), salat()])

make_sandwich()


# Задача 2. Плагины
# Один проект состоит из огромного количества разнообразных функций, часть из которых
# используется в других проектах в качестве плагинов, то есть они как бы «подключаются»
# и создают дополнительный функционал.
# Реализуйте специальный декоратор, который будет «регистрировать» нужные функции как
# плагины и заносить их в соответствующий словарь.

