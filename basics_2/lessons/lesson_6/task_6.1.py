# Задача 1. Словарь квадратов чисел
# На вход программе поступает целое число num. Напишите программу создания словаря,
# который включает в себя ключи от 1 до num, а значениями соответствующего ключа
# будет значение ключа в квадрате.
# Пример:
# Введите целое число: 5
# Результат: {1: 1, 2: 4, 3: 9, 4: 16, 5: 25}

# nums = int(input("Введите целое число: "))
# my_dict = dict()
#
# for num in range(1, nums + 1):
#     my_dict[num] = num ** 2
# print(my_dict)

# Задача 2. Студент
# Пользователь вводит фамилию, имя студента, город проживания, вуз, в котором он учится,
# и все его оценки. Всё вводится в одну строку через пробел. Напишите программу, которая
# по этой информации составит словарь и выведет его на экран.
# Пример:
# Введите информацию о студенте через пробел (имя, фамилия, город, место учёбы, оценки):
# Илья Иванов Москва МГУ 5 4 4 4 5
# Результат:
# Имя - Илья
# Фамилия - Иванов
# Город - Москва
# Место учёбы - МГУ
# Оценки - [5, 4, 4, 4, 5]

# enter_info = input("Введите информацию о студенте через пробел (имя, фамилия, город, место учёбы, оценки):\n")
# student_info = enter_info.split()
# student_dict = dict()
# keys = ["Имя", "Фамилия", "Город", "Место учёбы", "Оценки"]
#
# for key in range(len(keys)):
#     if keys[key] == 'Оценки':
#         student_dict[keys[key]] = [int(grade) for grade in student_info[key:]]
#     else:
#         student_dict[keys[key]] = student_info[key]
#
# for info in student_dict:
#     print(info, "-", student_dict[info])

# Решение от скилбокса
# user_info = input("Введите информацию о студенте через пробел (имя, фамилия, город, место учёбы, оценки): ").split()
# user_info_in_dict = {
#     "Имя": user_info[0],
#     "Фамилия": user_info[1],
#     "Город": user_info[2],
#     "Место учёбы": user_info[3],
#     "Оценки": [int(grade) for grade in list(user_info[4:])]
# }
#
# for key in user_info_in_dict:
#     print(f"{key} - {user_info_in_dict[key]}")

# Задача 3. Контакты
# Энтузиаст Степан, купив новый телефон, решил написать для него свою собственную операционную систему. И, конечно
# же, первое, что он захотел в ней реализовать, — это телефонная книга.
# Напишите программу, которая запрашивает у пользователя имя контакта и номер телефона, добавляет их в словарь и
# выводит на экран текущий словарь контактов. Запрос на добавление идёт бесконечно (но можно задать своё условие для
# завершения программы). Обеспечьте контроль ввода: если это имя уже есть в словаре, то выведите соответствующее
# сообщение.
# Пример:
# Текущие контакты на телефоне:
# <Пусто>
# Введите имя: Иван
# Введите номер телефона: 100200300
# Текущие контакты на телефоне:
# Иван  100200300
# Введите имя: Лена
# Введите номер телефона: 8005555522
# Текущие контакты на телефоне:
# Иван  100200300
# Лена  8005555522
# Введите имя: Иван
# Ошибка: такое имя уже существует.

def commands(phone_book):
    while True:
        choice = input("Выберите опцию:\n1 - ввод нового контакта\n2 - выход из приложения\n")

        if choice == '1':
            for name, number in phone_book.items():
                print(f"Текущие контакты на телефоне:\n{name}: {number}")
            name = input("Введите имя: ")
            number = input("Введите номер телефона: ")

            if name in phone_book:
                print('Ошибка: такое имя уже существует.')
                choice_change = input("Нужно сменить номер телефона у контакта? (Y/N)\n")
                new_number = number
                if choice_change == "Y":
                    phone_book[name] = new_number
                elif choice_change == "N":
                    continue

            else:
                phone_book[name] = number

        elif choice == '2':
            print("Выход из приложения.")
            break

        else:
            print("Некорректный ввод, попробуйте снова.")

    return  phone_book

my_phonebook = dict()
print(commands(my_phonebook))

# Вариант от скилбокс
# current_contacts = {}
# while True:
#     print("Текущие контакты на телефоне:")
#     if current_contacts:
#         for name in current_contacts:
#             print(name, current_contacts[name])
#     else:
#         print("<Пусто>")
#     new_contact = input("Введите имя (для остановки введите пустую строку): ")
#     new_telephone = int(input("Введите номер телефона: "))
#     if new_contact in current_contacts:
#         print("Ошибка: такое имя уже существует.")
#     else:
#         current_contacts[new_contact] = new_telephone