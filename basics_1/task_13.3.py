# Задача 1. Возможности компьютера.
# В одной IT-компании тестируют возможности различных языков программирования,
# компиляторов и, конечно же, компьютеров. Компания дала вам задачу понять, какое
# самое маленькое возможное число можно получить путём постоянного деления числа
# на 2. Изначально число равно единице. Также, помимо самого числа, компания просит
# вывести количество делений. Реализуйте такую программу.

# def count_delimiter(num):
#     count = 0
#     number = num
#     while num != 0:
#         number = num
#         num /= 2
#         count += 1
#     print(number, "Количество делений", count)
#
# count_delimiter(1)

# Задача 2. Тестирование.
# Команде программистов отдали на тестирование новую модель суперкомпьютера. Для начала
# программисты решили проверить, как у компьютера обстоят дела с вычислениями вещественных
# чисел. Разработчики компьютера предупредили, что на входе он работает только с экспоненциальной
# формой числа.
# Пользователь вводит число N в экспоненциальной форме, где мантисса всегда равна числу от 1 до 9,
# а порядок меньше нуля. Также есть переменная Х, которая изначально равна единице. Посчитайте, сколько
# раз нужно прибавить N к Х, чтобы оно перевалило за двойку.
# Дополнительно: обеспечьте контроль ввода.
# Пример 1:
# Введите число в эксп. форме: 1e-3
# Кол-во прибавлений: 1001
# Пример 2:
# Введите число в эксп. форме: 5.02e-1
# Кол-во прибавлений: 2
#

# def check_number(num: str):
#     mantissa = ""
#     for symbol in num:
#         if symbol == 'e':
#             break
#         mantissa += symbol
#     if 1 <= float(mantissa) <= 9 and float(num) < 1:
#         print('Число введено верно!')
#     else:
#         print("Число введено с ошибкой, мантисса всегда должна быть равна числу от 1 до 9, "
#                   "а порядок должен быть меньше нуля")
#
# def count_x(num):
#     x = 1
#     count = 0
#     while x <= 2:
#         x += num
#         count += 1
#     print("Кол-во прибавлений: ", count)
#
# number = input("Введите число в экспоненциальной форме, где мантисса всегда равна числу от 1 до 9,"
#                      " а порядок меньше нуля: ")
# check_number(number)
# count_x(float(number))

# Задача 3. Урок информатики.
# На одном из уроков информатики учитель объяснял тему «Числа с плавающей точкой», но несколько учеников
# никак не могли понять, почему эта точка «плавает» и как вообще выглядят числа в такой форме. Для наглядности
# учитель написал программу, которая берёт число больше десяти и выводит его в формате плавающей точки.
# Пользователь вводит положительное число x (x > 10). Напишите функцию, которая выводит его в формате плавающей
# точки, то есть x = a * 10 ** b, где 1 ≤ a < 10.
# Пример 1:
# Введите число: 16
# Формат плавающей точки: x = 1.6 * 10 ** 1
# Пример 2:
# Введите число: 92345
# Формат плавающей точки: x = 9.2345 * 10 ** 4

def learn_float_nums(num):
    count = 0
    while num > 10:
        num *= 0.1
        count += 1
    print(f'x = {round(num, count)} * 10 ** {count}')

number_x = int(input("Введите число: "))
learn_float_nums(number_x)
