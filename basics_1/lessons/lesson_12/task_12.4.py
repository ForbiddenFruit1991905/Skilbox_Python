# Задача 1. Среднее арифметическое.
# Программа получает от пользователя два числа — a и b.
# Реализуйте функцию, которая принимает на вход числа a и b,
# считает и выводит в консоль среднее арифметическое всех
# чисел из отрезка [a; b]. Обеспечьте контроль ввода: не забывайте,
# что а всегда должно быть меньше, чем b.
# Пример:
# Введите левую границу: 3
# Введите правую границу: 8
# Среднее: 5.5
# Усложнение: сделайте это без использования циклов.

# def count_avr_summ(a, b):
#     if a < b:
#         count = 0
#         summ = 0
#         for num in range(a, b + 1):
#             summ += num
#             count += 1
#         print(f'Среднее арифметическое чисел {a} и {b}: {float(summ / count)}')
#         print(f'Среднее арифметическое чисел {a} и {b}: {float((a + b) / 2)}')
#     else:
#         a, b = b, a
#         print("Левая граница должна быть меньше правой! Значения меняются местами.")
#         print(f'Среднее арифметическое чисел {a} и {b}: {float((a + b) / 2)}')
#
# first_num = int(input("Введите левую границу: "))
# second_num = int(input("Введите правую границу: "))
# count_avr_summ(first_num, second_num)

# Задача 2. Почта 2.
# На почте немного поменялись правила: теперь в почтовом извещении нужно
# указывать фамилию, имя, страну проживания, город, улицу, номер дома и
# номер квартиры.
# Реализуйте функцию, которая получает все эти данные и выводит на экран.
# В программе вызовите функцию три раза с разными значениями аргументов.

# def get_info(last_name, first_name, home_country, town, name_of_str, num_of_house, number_of_flat):
#     print(f"Фамилия: {last_name}\nИмя: {first_name}\nСтрана проживания: {home_country}\nГород: {town}\n"
#           f"Улица: {name_of_str}\nДом: {num_of_house}\nНомер квартиры: {number_of_flat}")
#
# for _ in range(3):
#     lastname = input("Фамилия: ")
#     name = input("Имя: ")
#     country = input("Страна проживания: ")
#     city = input("Город: ")
#     street = input("Улица: ")
#     number_of_house = input("Дом: ")
#     flat = input("Номер квартиры: ")
#     get_info(lastname, name, country, city, street, number_of_house, flat)

# Задача 3. GPS-навигатор 2.0.
# Нам поручили усовершенствовать GPS-навигатор, добавив в него новую фишку. Теперь пользователь может не
# только смотреть расстояние от себя до объекта, но и задавать в навигаторе две произвольные точки, после
# чего на экран ему выводится расстояние между ними. Для этого пользователь вводит четыре действительных
# числа x1, y1, x2, y2 — это как раз координаты этих двух точек.
# Напишите программу, где у пользователя спрашивается, чего он хочет — найти расстояние от себя до точки
# или найти расстояние между двумя произвольными точками, после чего запрашиваются необходимые координаты
# точек и выводится ответ на экран.
import math

def find_distance_1(x , y):
    print(f"Расстояние между точкой {x} и точкой {y}: {round(math.sqrt(x ** 2 + y ** 2), 2)}")

def find_distance_2(x_1, x_2, y_1, y_2):
    print(f"Расстояние между координатами {x_1, x_2} и {y_1, y_2}: "
          f"{round(math.sqrt((x_2 - x_1) ** 2 + (y_2 - y_1) ** 2), 2)}")

def make_choice():
    choice = int(input("Как Вы хотите определить расстояние до пункта назначения: 1 - найти расстояние от"
                       " себя до точки или 2 - найти расстояние между двумя произвольными точками\n"))
    if choice == 1:
        x = int(input("Введите точку x: "))
        y = int(input("Введите точку y: "))
        find_distance_1(x, y)
    elif choice == 2:
        x_1 = int(input("Введите точку x_1: "))
        x_2 = int(input("Введите точку x_2: "))
        y_1 = int(input("Введите точку y_1: "))
        y_2 = int(input("Введите точку y_2: "))
        find_distance_2(x_1, x_2, y_1, y_2)
    else:
        print("Неправильно введены данные.")

make_choice()